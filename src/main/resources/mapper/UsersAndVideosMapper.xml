<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.irdc.shortvideo.mapper.UsersAndVideosMapper">
    <resultMap id="BaseResultMap" type="com.irdc.shortvideo.VO.VideoWithUserVO">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="video_id" property="videoId" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="video_cover_path" property="videoCoverPath" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="video_desc" property="videoDesc" jdbcType="VARCHAR"/>
        <result column="video_path" property="videoPath" jdbcType="VARCHAR"/>
        <result column="like_num" property="likeNum" jdbcType="BIGINT"/>
        <result column="comment_num" property="commentNum" jdbcType="BIGINT"/>
        <result column="forward_num" property="forwardNum" jdbcType="BIGINT"/>
        <result column="play_num" property="playNum" jdbcType="BIGINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="is_public" property="isPublic" jdbcType="TINYINT"/>
        <result column="tag" property="tag" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="face_image" property="faceImage" jdbcType="VARCHAR"/>
    </resultMap>




    <select id="queryVideoByVideoId" resultMap="BaseResultMap" parameterType="String">
        select v.*,u.username as username,u.face_image as face_image from videos v 
        left join users u on v.user_id = u.user_id
        where
        v.status = 1 and u.status != 2
        and
        v.video_id=#{videoId}

  </select>

  <select id="queryRecommendVideos" resultMap="BaseResultMap">
        select v.*,u.username as username,u.face_image as face_image from videos v 
        left join users u on v.user_id = u.user_id
        where 
        v.status = 1 and v.is_public = 1 and u.status != 2
        order by v.score desc, v.create_time desc
  </select>
  
  <select id="queryVideosByTag" resultMap="BaseResultMap" parameterType="String" resultType="com.irdc.shortvideo.VO.VideoWithUserVO">
        select v.*,u.username as username,u.face_image as face_image from videos v 
        left join users u on v.user_id = u.user_id
        where
        v.tag like '%${_parameter}%' and v.status = 1 and v.is_public = 1 and u.status != 2
        order by v.create_time desc
  </select>
  
  <select id="queryUserFollowVideosByUserId" resultMap="BaseResultMap" parameterType="String" resultType="com.irdc.shortvideo.VO.VideoWithUserVO">
        select v.*,u.username as username,u.face_image as face_image from videos v 
        left join users u on v.user_id = u.user_id
        where
        v.user_id in (select ff.following_id from following_follower ff where follower_id=#{userId})
        and v.status = 1 and v.is_public = 1 and u.status != 2
        order by v.create_time desc
  </select>
  
  <select id="searchVideosByTitleOrDesc" resultMap="BaseResultMap" parameterType="String">
        select v.*,u.username as username,u.face_image as face_image from videos v
        left join users u on v.user_id = u.user_id
        where
        concat(ifnull(v.title,'0'),ifnull(v.video_desc,'0')) like '%${searchContent}%'
        and v.status = 1 and v.is_public = 1 and u.status != 2
        order by v.create_time desc
  </select>


    <select id="queryHottest10Video" resultType="com.irdc.shortvideo.VO.VideoWithUserVO" parameterType="String" resultMap="BaseResultMap">
    select v.like_num, v.title, v.video_id
    from videos v
    left join users u on v.user_id = u.user_id
    where v.status = 1 and v.is_public = 1 and u.status != 2
    order by v.like_num desc
    limit 10
  </select>

    <select id="queryUserPublishVideoInfoByUserId" resultType="com.irdc.shortvideo.VO.VideoWithUserVO" parameterType="String" resultMap="BaseResultMap">
    select v.video_cover_path, v.like_num, v.title, v.video_id, v.status, v.is_public
    from videos v
    left join users u on v.user_id = u.user_id
    where v.user_id = #{userId} and (v.status = 1 or v.status = 0) and u.status != 2
    order by v.create_time desc
  </select>

    <select id="queryUserLikeVideoInfoByUserId" parameterType="String" resultMap="BaseResultMap"
            resultType="com.irdc.shortvideo.VO.VideoWithUserVO">
        select v.*, u.username as username, u.face_image as face_image
        from user_like_video ulv,
             videos v,
             users u
        where ulv.user_id = #{userId}
          and ulv.video_id = v.video_id
          and v.user_id = u.user_id
          and v.status = 1
          and v.is_public = 1
    </select>

    <select id="mostLikeNum" resultType="com.irdc.shortvideo.VO.VideoWithUserVO" resultMap="BaseResultMap">
        select v.like_num, v.title, v.video_id
        from videos v
        left join users u on v.user_id = u.user_id
        where v.status = 1 and v.is_public = 1 and u.status != 2 and v.tag = #{tag}
        order by v.like_num desc
        limit 50
    </select>

</mapper>